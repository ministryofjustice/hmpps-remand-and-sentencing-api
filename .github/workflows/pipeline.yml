name: Pipeline [test -> build -> deploy]

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      additional_docker_tag:
        description: Additional docker tag that can be used to specify stable or testing tags
        required: false
        default: ''
        type: string
      push:
        description: Push docker image to registry flag
        required: true
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

concurrency:
  # Only cancel in progress when on a branch - use SHA on main to ensure uniqueness.
  # This will allow multiple pipelines to run at the same time on main.
  # Note that two pipelines running within a few minutes of each other will cause issues with helm deploying to
  # a namespace, as the second one will not be able to get a lock as a deploy will be in progress.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.sha || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  helm_lint:
    strategy:
      matrix:
        environments: [ 'dev', 'preprod', 'prod' ]
    name: helm lint
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/test_helm_lint.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: ${{ matrix.environments }}
  gradle-validate:
    name: Run the tests
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/gradle_localstack_postgres_verify.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      localstack-tag: "3"
      postgres-tag: "17"
      postgres-db: ras
      postgres-username: ras-user
      postgres-password: ras-pass
  build:
    name: Build docker image from hmpps-github-actions
    if: github.ref == 'refs/heads/main'
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/docker_build.yml@v2 # WORKFLOW_VERSION
    needs:
      - gradle-validate
    with:
      docker_registry: 'ghcr.io'
      registry_org: 'ministryofjustice'
      additional_docker_tag: ${{ inputs.additional_docker_tag }}
      push: ${{ inputs.push || true }}
      docker_multiplatform: false
  database_report:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Generate Database Schema Report
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Start Required Services
        run: docker compose -f docker-compose-schemaspy.yml up -d

      - name: Initialise DB
        shell: bash
        run: |
          export JAVA_OPTS="${{ inputs.java_options }}"
          ./gradlew initialiseDatabase
      - uses: ministryofjustice/hmpps-github-actions/.github/actions/database_schema_report@v2 # WORKFLOW_VERSION
        with:
          schema: public
          user: ras-user
          password: ras-pass
          database_name: ras
      - name: Upload static files as artifact
        id: upload_database_report
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: /tmp/schemaspy
  deploy_database_report:
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.upload_database_report.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: database_report
    steps:
      - name: Deploy to GitHub Pages
        id: deploy_database_report
        uses: actions/deploy-pages@v4
  deploy_dev:
    name: Deploy to the development environment
    needs:
      - build
      - helm_lint
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: 'dev'
      app_version: '${{ needs.build.outputs.app_version }}'
  deploy_preprod:
    name: Deploy to the preprod environment
    needs:
      - build
      - helm_lint
      - deploy_dev
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: 'preprod'
      app_version: '${{ needs.build.outputs.app_version }}'
  deploy_prod:
    name: Deploy to the prod environment
    needs:
      - build
      - helm_lint
      - deploy_preprod
    uses: ministryofjustice/hmpps-github-actions/.github/workflows/deploy_env.yml@v2 # WORKFLOW_VERSION
    secrets: inherit
    with:
      environment: 'prod'
      app_version: '${{ needs.build.outputs.app_version }}'
      slack_notification: 'true'
